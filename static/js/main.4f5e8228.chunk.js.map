{"version":3,"sources":["../../prognoza/src/components/SearchCity.js","../../prognoza/src/components/WeatherParamertBar.js","../../prognoza/src/components/WeatherForOtherDay.js","../../prognoza/src/components/ShowWeather.js","../../prognoza/src/components/Footer.js","../../prognoza/src/components/App.js","../../prognoza/src/index.js"],"names":["SearchCity","react_default","a","createElement","className","type","placeholder","value","this","props","inputValue","onChange","handleSearchInputValue","onClick","handleSeatchAccept","Component","Icon","WeatherParamertBar","_this$props","subfix","WeatherParamertBar_Icon","WeatherForOtherDay","weather","getDayName","Math","floor","main","temp","humidity","clouds","all","pressure","chartOptions","title","width","height","backgroundColor","vAxis","gridlineColor","baselineColor","textStyle","color","hAxis","is3D","legend","lineWidth","series","0","ShowWeather","state","currentWeatherId","$","each","$bar","find","$val","perc","attr","p","animate","duration","easing","step","css","transform","text","updateWeatherParamerBars","temperature","e","targetID","indexOf","setState","replace","weatherId","date","Date","parse","dt_txt","getDay","_this2","city","i","push","src","concat","icon","alt","components_WeatherParamertBar","calcPressurenOnPercentages","index_esm","chartType","loader","data","slice","options","chartEvents","eventName","callback","_ref","chartWrapper","google","chart","getChart","visualization","events","addListener","changeCurrentWeatherId","components_WeatherForOtherDay","Footer","App","searchValue","selectedCity","_this","target","API","fetch","then","r","json","cod","alert","cityName","toUpperCase","timeHours","getHours","document","querySelector","classList","add","_this$state","setBackground","components_SearchCity","components_ShowWeather","list","components_Footer","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.4f5e8228.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchCity extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"section--search-city\">\r\n        <div className=\"centerY\">\r\n          <h1 className=\"white\"> Prognoza pogody </h1>\r\n          <div className=\"search\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input--text\"\r\n              placeholder=\"Wpisz miasto\"\r\n              value={this.props.inputValue}\r\n              onChange={this.props.handleSearchInputValue}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"input--submit\"\r\n              value=\"Szukaj\"\r\n              onClick={this.props.handleSeatchAccept}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCity;\r\n","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nconst Icon = props => {\r\n  const { type } = props;\r\n  if (type === \"temp\") {\r\n    return <i className=\"fas fa-thermometer-three-quarters\"></i>;\r\n  } else if (type === \"humidity\") {\r\n    return <i className=\"fas fa-tint\"></i>;\r\n  } else if (type === \"cloudy\") {\r\n    return <i className=\"fas fa-cloud\"></i>;\r\n  } else if (type === \"pressure\") {\r\n    return <i className=\"fas fa-clock\"></i>;\r\n  } else {\r\n    return <p>ERROR</p>;\r\n  }\r\n};\r\n\r\nclass WeatherParamertBar extends Component {\r\n  render() {\r\n    const { value, subfix, type } = this.props;\r\n    return (\r\n      <div className=\"weather-parameter white\">\r\n        <div className=\"progress\" value={value} type={type}>\r\n          <div className=\"barOverflow\">\r\n            <div className=\"bar\"></div>\r\n          </div>\r\n          <div>\r\n            <Icon type={type} />\r\n          </div>\r\n          <span></span>\r\n          {subfix}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherParamertBar;\r\n","import React from \"react\";\r\n\r\nconst WeatherForOtherDay = props => {\r\n  const { weather, getDayName } = props;\r\n  return (\r\n    <div className=\"weather-for-next-days__day\">\r\n      <p className=\"day-name\">{getDayName()}</p>\r\n      <div className=\"weather-for-next__parameters\">\r\n        <ul>\r\n          <li className=\"padding-top--20px\">\r\n            <i className=\"fas fa-thermometer-three-quarters\"></i>:{\" \"}\r\n            {Math.floor(weather.main.temp)}C\r\n          </li>\r\n          <li>\r\n            <i className=\"fas fa-tint\"></i>: {Math.floor(weather.main.humidity)}\r\n            %\r\n          </li>\r\n          <li>\r\n            <i className=\"fas fa-cloud\"></i>: {Math.floor(weather.clouds.all)}%\r\n          </li>\r\n          <li>\r\n            <i className=\"fas fa-clock\"></i>: {weather.main.pressure}hPa\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForOtherDay;\r\n","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"../sass/showWeather.sass\";\r\nimport WeatherParamertBar from \"./WeatherParamertBar\";\r\nimport WeatherForOtherDay from \"./WeatherForOtherDay\";\r\n\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst chartOptions = {\r\n  title: \"\",\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n  backgroundColor: \"transparent\",\r\n  vAxis: {\r\n    gridlineColor: \"transparent\",\r\n    baselineColor: \"white\",\r\n    textStyle: { color: \"white\" }\r\n  },\r\n  hAxis: {\r\n    gridlineColor: \"transparent\",\r\n    baselineColor: \"white\",\r\n    textStyle: { color: \"white\" }\r\n  },\r\n  is3D: true,\r\n  legend: \"none\",\r\n  lineWidth: 4,\r\n  series: {\r\n    0: { color: \"white\" }\r\n  }\r\n};\r\n\r\nclass ShowWeather extends Component {\r\n  state = {\r\n    currentWeatherId: 0\r\n  };\r\n\r\n  updateWeatherParamerBars() {\r\n    $(\".progress\").each(function() {\r\n      var $bar = $(this).find(\".bar\");\r\n      var $val = $(this).find(\"span\");\r\n      var perc = $(this).attr(\"value\");\r\n      var type = $(this).attr(\"type\");\r\n\r\n      $({ p: 0 }).animate(\r\n        { p: perc },\r\n        {\r\n          duration: 1000,\r\n          easing: \"swing\",\r\n          step: function(p) {\r\n            $bar.css({\r\n              transform: \"rotate(\" + (45 + p * 1.8) + \"deg)\"\r\n            });\r\n            if (type === \"temp\") $val.text((p - 50) | 0);\r\n            else if (type === \"pressure\") $val.text((p + 950) | 0);\r\n            else $val.text(p | 0);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWeatherParamerBars();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateWeatherParamerBars();\r\n  }\r\n\r\n  calcTemeraturepOnPercentages(temp) {\r\n    const temperature = Math.floor(temp);\r\n    if (temperature === 0) {\r\n      return 50;\r\n    } else {\r\n      return 50 + temperature;\r\n    }\r\n  }\r\n\r\n  calcPressurenOnPercentages(pressure) {\r\n    if (pressure === 1000) return pressure;\r\n    else return 50 + (pressure - 1000);\r\n  }\r\n\r\n  changeCurrentWeatherId(e) {\r\n    if (!e.targetID.indexOf(\"point\")) {\r\n      this.setState({\r\n        currentWeatherId: e.targetID.replace(\"point#0#\", \"\")\r\n      });\r\n    }\r\n  }\r\n\r\n  getDayName(weatherId) {\r\n    const { weather } = this.props;\r\n    const date = Date.parse(weather[weatherId].dt_txt);\r\n    const day = new Date(date).getDay();\r\n    switch (day) {\r\n      case 1:\r\n        return \"Poniedziałek\";\r\n      case 2:\r\n        return \"Wtorek\";\r\n      case 3:\r\n        return \"Środa\";\r\n      case 4:\r\n        return \"Czwartek\";\r\n      case 5:\r\n        return \"Piątek\";\r\n      case 6:\r\n        return \"Sobota\";\r\n      case 7:\r\n        return \"Niedziela\";\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { city, weather } = this.props;\r\n    const { currentWeatherId } = this.state;\r\n\r\n    const series = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      series.push(Math.floor(weather[i].main.temp));\r\n    }\r\n\r\n    return (\r\n      <section className=\"section--show-weather section-100vh\">\r\n        <h1 className=\"section--show-weather__city-name white\">\r\n          <span className=\"section--show-weather__city-name--big\">\r\n            Pogoda dla miasta:\r\n          </span>{\" \"}\r\n          <span>{city}</span>\r\n        </h1>\r\n\r\n        <div className=\"weather-parameter-container margin-top--50px\">\r\n          <div className=\"weather-parameter\">\r\n            <img\r\n              className=\"weather-icon\"\r\n              src={`http://openweathermap.org/img/wn/${weather[0].weather[0].icon}@2x.png`}\r\n              alt=\"weather icon\"\r\n            />\r\n            <p className=\"font-size--big white\">\r\n              {Math.floor(weather[currentWeatherId].main.temp)}*C\r\n            </p>\r\n          </div>\r\n          <WeatherParamertBar\r\n            value={Math.floor(weather[currentWeatherId].main.humidity)}\r\n            subfix=\"%\"\r\n            type=\"humidity\"\r\n          />\r\n          <WeatherParamertBar\r\n            value={Math.floor(weather[currentWeatherId].clouds.all)}\r\n            subfix=\"%\"\r\n            type=\"cloudy\"\r\n          />\r\n          <WeatherParamertBar\r\n            value={this.calcPressurenOnPercentages(\r\n              weather[currentWeatherId].main.pressure\r\n            )}\r\n            subfix=\"hPa\"\r\n            type=\"pressure\"\r\n          />\r\n        </div>\r\n        <div className=\"chart\">\r\n          <Chart\r\n            width={\"100%\"}\r\n            height={\"400px\"}\r\n            chartType=\"LineChart\"\r\n            loader={<div>Ładowanie wykresu temperatury</div>}\r\n            data={[\r\n              [\"x\", \"temperatura\"],\r\n              [\"teraz\", weather[0].main.temp],\r\n              [\r\n                weather[1].dt_txt.slice(10, 16),\r\n                Math.floor(weather[1].main.temp)\r\n              ],\r\n              [\r\n                weather[2].dt_txt.slice(10, 16),\r\n                Math.floor(weather[2].main.temp)\r\n              ],\r\n              [\r\n                weather[3].dt_txt.slice(10, 16),\r\n                Math.floor(weather[3].main.temp)\r\n              ],\r\n              [\r\n                weather[4].dt_txt.slice(10, 16),\r\n                Math.floor(weather[4].main.temp)\r\n              ],\r\n              [\r\n                weather[5].dt_txt.slice(10, 16),\r\n                Math.floor(weather[5].main.temp)\r\n              ],\r\n              [\r\n                weather[6].dt_txt.slice(10, 16),\r\n                Math.floor(weather[6].main.temp)\r\n              ],\r\n              [\r\n                weather[7].dt_txt.slice(10, 16),\r\n                Math.floor(weather[7].main.temp)\r\n              ]\r\n            ]}\r\n            options={chartOptions}\r\n            chartEvents={[\r\n              {\r\n                eventName: \"ready\",\r\n                callback: ({ chartWrapper, google }) => {\r\n                  const chart = chartWrapper.getChart();\r\n                  google.visualization.events.addListener(chart, \"click\", e =>\r\n                    this.changeCurrentWeatherId(e)\r\n                  );\r\n                }\r\n              }\r\n            ]}\r\n          />\r\n        </div>\r\n        <h2 className=\"white margin-top--50px\">Prognoza na następne dni:</h2>\r\n        <div className=\"weather-for-next-days white\">\r\n          <WeatherForOtherDay\r\n            weather={weather[8]}\r\n            getDayName={() => this.getDayName(8)}\r\n          />\r\n          <WeatherForOtherDay\r\n            weather={weather[16]}\r\n            getDayName={() => this.getDayName(16)}\r\n          />\r\n          <WeatherForOtherDay\r\n            weather={weather[24]}\r\n            getDayName={() => this.getDayName(24)}\r\n          />\r\n          <WeatherForOtherDay\r\n            weather={weather[32]}\r\n            getDayName={() => this.getDayName(32)}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowWeather;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <p> Mateusz Buturla 2019 </p>{\" \"}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport SearchCity from \"./SearchCity\";\r\nimport ShowWeather from \"./ShowWeather\";\r\nimport Footer from \"./Footer\";\r\nimport \"../sass/style.sass\";\r\nimport \"../sass/colors.sass\";\r\nimport \"../sass/style.css\";\r\nimport \"../sass/cdn.sass\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    searchValue: \"\",\r\n    selectedCity: \"\",\r\n    weather: \"\"\r\n  };\r\n\r\n  handleSearchInputValue = e => {\r\n    this.setState({ searchValue: e.target.value });\r\n  };\r\n\r\n  handleSeatchAccept = () => {\r\n    if (this.state.searchValue !== \"\") {\r\n      const API = `http://api.openweathermap.org/data/2.5/forecast?q=${this.state.searchValue}&appid=aa1cd98455683191d68a77ec6a30834d&units=metric`;\r\n      fetch(API)\r\n        .then(r => r.json())\r\n        .then(r => {\r\n          if (r.cod === \"404\") {\r\n            this.setState({\r\n              searchValue: \"\"\r\n            });\r\n            alert(\"Nie ma takiego miasta\");\r\n          } else {\r\n            let cityName =\r\n              this.state.searchValue[0].toUpperCase() +\r\n              this.state.searchValue.slice(1);\r\n            this.setState({\r\n              weather: r,\r\n              selectedCity: cityName,\r\n              searchValue: \"\"\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"Nie wpisałeś miasta\");\r\n    }\r\n  };\r\n\r\n  setBackground() {\r\n    const date = new Date();\r\n    const timeHours = date.getHours();\r\n\r\n    if (timeHours >= 6 && timeHours < 9) {\r\n      document.querySelector(\"body\").classList.add(\"time-sunrise\");\r\n    } else if (timeHours >= 9 && timeHours < 19) {\r\n      document.querySelector(\"body\").classList.add(\"time-day\");\r\n    } else if (timeHours >= 19 && timeHours < 22) {\r\n      document.querySelector(\"body\").classList.add(\"time-sunset\");\r\n    } else if (timeHours >= 22 || timeHours < 6) {\r\n      document.querySelector(\"body\").classList.add(\"time-night\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { searchValue, selectedCity, weather } = this.state;\r\n\r\n    this.setBackground();\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {selectedCity === \"\" && (\r\n          <SearchCity\r\n            handleSearchInputValue={this.handleSearchInputValue}\r\n            handleSeatchAccept={this.handleSeatchAccept}\r\n            inputValue={searchValue}\r\n          />\r\n        )}\r\n\r\n        {selectedCity !== \"\" && (\r\n          <ShowWeather city={selectedCity} weather={weather.list} />\r\n        )}\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}